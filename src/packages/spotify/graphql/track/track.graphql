type Track implements Item {
    id: ID!
    name: String!
    type: ItemType!
    available_markets: [String!]

    artists: [Artist!]!

    album: Album
    disc_number: Int!
    track_number: Int!
    duration_ms: Int!
    explicit: Boolean!
    popularity: Int!

    restrictions: Restrictions

    uri: String!
    preview_url: String

    external_ids: ExternalIds!
    external_urls: ExternalUrls
    linked_from: LinkedFrom
    is_playable: Boolean
    is_local: Boolean!
    audio_features: AudioFeatures
}

type AudioFeatures {
    acousticness: Float!
    danceability: Float!
    duration_ms: Int!
    energy: Float!
    instrumentalness: Float!
    key: Int!
    liveness: Float!
    loudness: Float!
    mode: Int!
    speechiness: Float!
    temp: Float
    time_signature: Int!
    type: String!
    valence: Float!
}

type RecommendationSeed {
    afterFilteringSize: Int
    afterRelinkingSize: Int
    href: String
    id: ID!
    initialPoolSize: String
    type: ItemType!
}

type Recommendations {
    seeds: [RecommendationSeed!]!
    tracks: [Track!]!
}

input RecommendationsInput {
    seed_artists: [String!]
    seed_genres: [String!]
    seed_tracks: [String!]
    limit: Int
    market: String
    max_acousticness: Float
    max_danceability: Float
    max_duration_ms: Int
    max_energy: Float
    max_instrumentalness: Float
    max_key: Int
    max_liveness: Float
    max_loudness: Float
    max_mode: Int
    max_popularity: Int
    max_speechiness: Float
    max_tempo: Float
    max_time_signature: Int
    max_valence: Float
    min_acousticness: Float
    min_danceability: Float
    min_duration_ms: Int
    min_energy: Float
    min_instrumentalness: Float
    min_key: Int
    min_liveness: Float
    min_loudness: Float
    min_mode: Int
    min_popularity: Int
    min_speechiness: Float
    min_tempo: Float
    min_time_signature: Int
    min_valence: Float
    target_acousticness: Float
    target_danceability: Float
    target_duration_ms: Int
    target_energy: Float
    target_instrumentalness: Float
    target_key: Int
    target_liveness: Float
    target_loudness: Float
    target_mode: Int
    target_popularity: Int
    target_speechiness: Float
    target_tempo: Float
    target_time_signature: Int
    target_valence: Float
}

type Query {
    track(id: ID!, market: String): Track
    tracks(ids: [ID!]!, market: String): [Track!]!
    recommendations(input: RecommendationsInput): Recommendations!
}
